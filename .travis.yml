language: cpp
sudo: required
dist: trusty
notifications:
  email:
    on_success: never
    on_failure: always

matrix:
  include:

    - os: osx
      name: "macOS with XCode 8.3"
      compiler: clang
      osx_image: xcode8.3

    - os: osx
      name: "macOS with XCode 9.4"
      compiler: clang
      osx_image: xcode9.4

    - os: linux
      name: "linux with clang 6.0"
      compiler: clang-6.0
      env:
        - C_COMPILER=clang-6.0
        - CXX_COMPILER=clang++-6.0
        - CI_CXX_FLAGS="-std=c++17 -stdlib=libc++"
      addons:
        apt:
          packages:
            - clang-6.0
            - libopenblas-dev
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
      before_install:
        - export CXX=clang++-6.0 CC=clang-6.0
        - . ${TRAVIS_BUILD_DIR}/setup_cxx.sh 6.0.1 /usr

    - os: linux
      name: "linux with gcc 8"
      compiler: gcc-8
      env:
        - C_COMPILER=gcc-8
        - CXX_COMPILER=g++-8
        - USE_GCOV=true
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
            - libopenblas-dev
            - lcov
      before_install:
        - export CC=gcc-8
        - export CXX=g++-8

install:
  - DEPS_DIR="${HOME}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.12/cmake-3.12.0-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew install cmake || brew upgrade cmake
      brew install llvm
      brew install libomp
    fi
  - cmake --version


script:
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir build
  - cd build
  - export CXXFLAGS=${CI_CXX_FLAGS}
  - cmake -DCMAKE_BUILD_TYPE=Debug ..
  - make
  - |
    if [[ "${USE_GCOV}" == "true" ]]; then
      make athena_coverage
    fi
  - ctest --verbose

after_success:
  - |
    if [[ "${CXX}" == "g++-8" ]]; then
     cd ${TRAVIS_BUILD_DIR}
     lcov --directory . --capture --output-file coverage.info
     lcov --remove coverage.info '/usr/*' --output-file coverage.info
     lcov --list coverage.info
    fi
  - bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"